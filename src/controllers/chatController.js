const { fetchMessageHistory } = require("../services/messageService");
const { askCohere } = require("../services/openaiService");
const logger = require("../utils/logger");

async function handleChat(message, prompt, context = "") {
  try {
    if (!message || !message.channel) {
      console.error("‚ùå Error: message ‡∏´‡∏£‡∏∑‡∏≠ channel ‡πÄ‡∏õ‡πá‡∏ô undefined");
      return;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏¥‡∏î"
    await message.channel.sendTyping();

    const reply = await askCohere(context, prompt); // ‡∏™‡πà‡∏á context ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏ß‡∏°
    logger.info(`üì® ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á AI: "${prompt}"`, false);

    if (!reply || reply.trim() === "") {
      logger.warn("‚ö†Ô∏è AI ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÑ‡∏î‡πâ");

      const response = "‡∏ú‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö üòì";
      if (typeof message.reply === "function") {
        return message.reply(response);
      } else {
        return message.channel.send(response);
      }
    }

    if (typeof message.reply === "function") {
      message.reply(reply);
    } else {
      message.channel.send(reply);
    }

    logger.info(`üì© ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: "${reply}"`, false);
  } catch (error) {
    console.error("‚ùå Error while handling chat:", error);
    logger.error(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö: ${error.message}`);
  }
}

module.exports = { handleChat };
